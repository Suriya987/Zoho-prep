Given an integer x, return true if x is a 
palindrome
, and false otherwise.

 

Example 1:

Input: x = 121
Output: true
Explanation: 121 reads as 121 from left to right and from right to left.
Example 2:

Input: x = -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
Example 3:

Input: x = 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
 

Constraints:

-231 <= x <= 231 - 1
 

Follow up: Could you solve it without converting the integer to a string?

{ { Actually i am having one doubt for test case 010 } }
    Thats why i am skipped this appraoch but when i used below test case is passed for all.
   010 -> input leetcode shows it is not a valid input integer.

class Solution {
public:
    bool isPalindrome(int x) {
         
         //edge case if num is negative then it is definitely not a palindrome
         if(x<0)  return false;
            
             long sum=0;
                 int num=x;
             while(num)
             {
                //int rem=num%10;
                sum=sum*10+(num%10);
                num=num/10;
             }

             if(sum==x) return true;
             return false;         
    }
};
