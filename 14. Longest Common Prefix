Write a function to find the longest common prefix string amongst an array of strings.

If there is no common prefix, return an empty string "".

Example 1:

Input: strs = ["flower","flow","flight"]
Output: "fl"
Example 2:

Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.

Time complexity : O(N)
space complexity : O(1) 


class Solution {
public:
    string longestCommonPrefix(vector<string>& strs) {
        
        string temp="";
        string res=strs[0];
        
         int n=strs.size();
          for(int i=1;i<n;i++)
          {
                 temp=strs[i];
                 int len=res.size();
                 int len1=temp.size();
                 string curr="";
                 for(int j=0;j<len && j<len1;j++)
                 {
                      if(temp[j]==res[j])
                      {
                          curr+=res[j];
                      }
                      else 
                       break;
                 }
                 res=curr;
          }
          return res;
    }
};

Another appraoch using sorting

sort the given string 
 take first and last words in a string 
 compare and return it;

class Solution {
public:
    string longestCommonPrefix(vector<string>& v) {
        string ans="";
        sort(v.begin(),v.end());
        int n=v.size();
        string first=v[0],last=v[n-1];
        for(int i=0;i<min(first.size(),last.size());i++){

            if(first[i]!=last[i]){
                return ans;
            }
            ans+=first[i];

        }
        return ans;
    }
};
